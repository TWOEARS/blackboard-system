classdef SegmentationHypothesis < Hypothesis
    % SEGMENTATIONHYPOTHESIS This class represents the segmentation results
    %   that have been generated by SegmentationKS for one particular sound
    %   source. The hypothesis will be represented as a "soft-mask", which
    %   is generated by performing clustering on the segmentation results.
    %
    % AUTHOR:
    %   Christopher Schymura (christopher.schymura@rub.de)
    %   Cognitive Signal Processing Group
    %   Ruhr-Universitaet Bochum
    %   Universitaetsstr. 150, 44801 Bochum    
    
    properties (SetAccess = private)
        sourceIdentifier            % Unique identifier of the particular 
                                    % sound source represented by this
                                    % hypothesis.
        type                        % Specifies the type of the 
                                    % segmentation, either 'SoundSource' or
                                    % 'background'.
        softMask                    % Probabilistic segmentation mask 
                                    % associated with this sound source.
        cfHz                        % center frequencies of the mask
        hopSize                     % Hop size or sampling rate of the mask
        refAzm                      % relative azm of source this hypothesis is based on
    end
    
    methods
        function obj = SegmentationHypothesis(sourceIdentifier, type, ...
                softMask, cfHz, hopSize, refAzm)
            % SEGMENTATIONHYPOTHESIS This constructor function is used to
            %   generate a new segmentation hypothesis on the blackboard.
            %
            % REQUIRED INPUTS:
            %   sourceIdentifier - Unique hash string, that was generated
            %       by the Segmentation KS.
            %   type, String that specifies the type of the segmentation
            %       hypothesis, which can either be 'Background' or
            %       'SoundSource'.
            %   softMask - The probabilistic segmentation mask, specified
            %       as a NxM matrix, where N is the number of frames and M
            %       is the number of filterbank channels.
            
            % Check inputs
            validatestring( type, {'Background', 'SoundSource'} );
            validateattributes( softMask, {'numeric'}, {'real', '2d', '>=', 0, '<=', 1} );
            validateattributes( cfHz, {'numeric'}, {'real', '>', 0} );
            validateattributes( hopSize, {'numeric'}, {'real', 'scalar', '>', 0} );
            validateattributes( refAzm, {'numeric'}, {'real', 'scalar', '>=' -360, '<=', 360} );
            
            % Add parameters to object properties
            obj.sourceIdentifier = sourceIdentifier;
            obj.type = type;
            obj.softMask = softMask;
            obj.cfHz = cfHz;
            obj.hopSize = hopSize;
            obj.refAzm = refAzm;
        end
    end
end
