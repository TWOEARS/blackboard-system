classdef SourceAzimuthHypothesis < Hypothesis
    % SourceAzimuthHypothesis This class represents the localization results in the
    %   horizontal plane that have been generated by SegmentationKS for one particular
    %   sound source. The hypothesis will be represented by the estimated angular position
    %   and the corresponding circular variance.
    %
    % AUTHOR:
    %   Christopher Schymura (christopher.schymura@rub.de)
    %   Cognitive Signal Processing Group
    %   Ruhr-Universitaet Bochum
    %   Universitaetsstr. 150, 44801 Bochum

    properties (SetAccess = private)
        sourceIdentifier            % Unique identifier of the particular
                                    % sound source represented by this
                                    % hypothesis.
        sourceAzimuth               % Azimuth of the represented sound source in [deg].
        sourceAzimuthVariance       % Circular variance of the estimated
                                    % angular position.
    end

    methods
        function obj = SourceAzimuthHypothesis(sourceIdentifier, ...
                sourceAzimuth, sourceAzimuthVariance)
            % SourceAzimuthHypothesis This constructor function is used to
            %   generate a new source azimuth hypothesis on the blackboard.
            %
            % REQUIRED INPUTS:
            %   sourceIdentifier      - Unique hash string, that was generated by the
            %                           Segmentation KS.
            %   sourceAzimuth         - Angular position of the sound source,
            %                           specified in [rad].
            %   sourceAzimuthVariance - The circular variance of the estimated source
            %                           azimuth. By definition, the circular variance is
            %                           a value between zero and one.

            % Check inputs
            p = inputParser();

            p.addRequired('sourceIdentifier', @isstr);
            p.addRequired('sourceAzimuth', @(x) validateattributes(x, ...
                {'numeric'}, {'real', 'scalar', '>=', -pi, '<=', pi}));
            p.addRequired('sourceAzimuthVariance', @(x) validateattributes(x, ...
                {'numeric'}, {'real', 'scalar', '>=', 0, '<=', 1}));
            p.parse(sourceIdentifier, sourceAzimuth, sourceAzimuthVariance);

            % Add parameters to object properties
            obj.sourceIdentifier = p.Results.sourceIdentifier;
            obj.sourceAzimuth = p.Results.sourceAzimuth;
            obj.sourceAzimuthVariance = p.Results.sourceAzimuthVariance;
        end
    end
end
% vim: set sw=4 ts=4 et tw=90 cc=+1:
