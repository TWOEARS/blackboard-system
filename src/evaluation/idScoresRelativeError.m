function idScoresRelativeError(bbs,labels,onOffsets)

fprintf( '\n\nEvaluate scores...\n\n' );
idHyps = bbs.blackboard.getData( 'identityHypotheses' );
idMismatch = getIdScores( idHyps );
idLabels = sort( fieldnames( idMismatch ) );
for ii = 1 : numel( idLabels )
    labelOnOffs = onOffsets(strcmp(labels,idLabels{ii}),:);
    for jj = 1 : size(labelOnOffs,1)
        onIdx = find(idMismatch.(idLabels{ii}).x > labelOnOffs(jj,1),1);
        if isempty(onIdx), continue; end;
        idMismatch.(idLabels{ii}).x = ...
            [idMismatch.(idLabels{ii}).x(1:onIdx-1) ...
             labelOnOffs(jj,1) ...
             idMismatch.(idLabels{ii}).x(onIdx:end)];
        idMismatch.(idLabels{ii}).y = ...
            [idMismatch.(idLabels{ii}).y(1:onIdx-1) ...
             idMismatch.(idLabels{ii}).y(onIdx-1) ...
             idMismatch.(idLabels{ii}).y(onIdx:end)];
        offIdx = find(idMismatch.(idLabels{ii}).x > labelOnOffs(jj,2),1);
        idMismatch.(idLabels{ii}).x = ...
            [idMismatch.(idLabels{ii}).x(1:offIdx-1) ...
             labelOnOffs(jj,2) ...
             idMismatch.(idLabels{ii}).x(offIdx:end)];
        idMismatch.(idLabels{ii}).y = ...
            [idMismatch.(idLabels{ii}).y(1:offIdx-1) ...
             idMismatch.(idLabels{ii}).y(offIdx-1) ...
             idMismatch.(idLabels{ii}).y(offIdx:end)];
        idMismatch.(idLabels{ii}).y(onIdx:offIdx) = ...
            1.0 - idMismatch.(idLabels{ii}).y(onIdx:offIdx);
    end
    idMismatch.(idLabels{ii}).x = [0 idMismatch.(idLabels{ii}).x];
    idMismatch.(idLabels{ii}).dx = ...
        idMismatch.(idLabels{ii}).x(2:end) - idMismatch.(idLabels{ii}).x(1:end-1);
    idMismatch.(idLabels{ii}).e = ...
        idMismatch.(idLabels{ii}).dx * idMismatch.(idLabels{ii}).y';
    idMismatch.(idLabels{ii}).re = ...
        idMismatch.(idLabels{ii}).e / sum( idMismatch.(idLabels{ii}).dx );
    fprintf( 'relative error of %s identification model: %f\n', ...
        idLabels{ii}, idMismatch.(idLabels{ii}).re );
end
